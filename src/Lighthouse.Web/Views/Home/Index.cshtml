@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<button>Run</button>
<pre></pre>

  <iframe id="edit" style="border: 1px solid #ccc; width:500px; height:500px;" src="@Url.Content("~/Content/frame.html")"></iframe>
<script>
    var device = {
    };
    var deviceActions = {
        Led: {
            setIsOn: function (name, state) {
                if (device.Leds[name].IsOn != state) {
                    device.Leds[name].IsOn = state;
                    arduino.server.setLedIsOn(name,state);
                }
            }
        }
    }

    var arduino = $.connection.arduino;
    
    function blocklyReadonlyLoaded(blockly) {
        // Called once Blockly is fully loaded.
        window.BlocklyReadonly = blockly;
    }
    function blocklyLoaded(blockly) {
        // Called once Blockly is fully loaded.
        window.Blockly = blockly;

        if (typeof (Storage) !== "undefined") {
            if (localStorage.data != null) {
                var xml = Blockly.Xml.textToDom(localStorage.data);
                Blockly.Xml.domToWorkspace(Blockly.mainWorkspace, xml);
                console.log("restored");
            }
        } else {
            // Sorry! No web storage support..
        }
    }
    var running = false;
    var loop = false;
    
    function Stop() {

        running = false;

    }
    
    var loopTo;
    function Run() {

        

        running = true;
        RunLoop();
    }

    function RunLoop(){
        var code = Blockly.Generator.workspaceToCode('JavaScript');
        $('pre').text(code);
        try {
            eval(code);
        }
        catch (ex) {
        }
        if(running){
            clearTimeout(loopTo);
            loopTo = setTimeout(RunLoop, 10);
        }
    }
   
    $(window).unload(function () {
        if (typeof (Storage) !== "undefined") {
            var xml = Blockly.Xml.workspaceToDom(Blockly.mainWorkspace);
            localStorage.setItem('data', Blockly.Xml.domToText(xml));
            console.log("backuped");
        } else {
            // Sorry! No web storage support..
        }
    });

    $(function () {

        $('button').click(function () {
            if (running) {
                Stop();
                $(this).text("Run")
            } else {
                $(this).text("Stop");
                Run();
            }
        });

        arduino.client.updateState = function (e) {
            device = e;

        };

            $.connection.hub.start().done(function () {
                
                arduino.server.refresh();

               
            });
    });




</script>